)
worldmap
worldmap +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = nbs_map, aes(x = longitude, y = latitude,
z = WTCPUE), alpha = 0.6, bins = 11) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern Bering Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))
head(nbs_map)
head(ebs_map)
nrow(ebs_map)
nbs_map = with(nbs, aggregate(list(cpue=WTCPUE), by = list(CRUISE, HAUL), mean))
ebs_map = with(ebs, aggregate(list(cpue=WTCPUE), by = list(CRUISE, HAUL), mean))
head(nbs_map)
nbs_map = with(nbs, aggregate(list(cpue=WTCPUE), by = list(cruise=CRUISE, haul=HAUL, LATITUDE, LONGITUDE), mean))
head(nbs_map)
nbs_map = with(nbs, aggregate(list(cpue=WTCPUE), by = list(cruise=CRUISE, haul=HAUL, lat=LATITUDE, lon=LONGITUDE), mean))
head(nbs_map)
ebs_map = with(ebs, aggregate(list(cpue=WTCPUE), by = list(cruise=CRUISE, haul=HAUL, lat=LATITUDE, lon=LONGITUDE), mean))
head(nbs_map)
worldmap +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = nbs_map, aes(x = longitude, y = latitude,
z = WTCPUE), alpha = 0.6, bins = 11) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern Bering Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))
worldmap +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = nbs_map, aes(x = lon, y = lat,
z = cpue), alpha = 0.6, bins = 11) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern Bering Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))
worldmap +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = nbs_map, aes(x = lon, y = lat,
z = cpue), alpha = 0.6, bins = 11) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern Bering Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))+ worldmap
worldmap +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = nbs_map, aes(x = lon, y = lat,
z = cpue), alpha = 0.6, bins = 11) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern Bering Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))
worldmap +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = nbs_map, aes(x = lon, y = lat,
z = cpue), alpha = 0.6, bins = 11) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern Bering Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))+geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
)
all_bs = rbind(nbs_map, ebs_map)
worldmap +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = all_bs, aes(x = lon, y = lat,
z = cpue), alpha = 0.6, bins = 11) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern Bering Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))+geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
)
worldmap +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = all_bs, aes(x = lon, y = lat,
z = cpue), alpha = 0.6, bins = 11) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern and Northern Bering Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))+geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
)
worldmap +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = all_bs, aes(x = lon, y = lat,
z = cpue), alpha = 0.6, bins = 20) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern and Northern Bering Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))+geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
)
worldmap +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = all_bs, aes(x = lon, y = lat,
z = cpue), alpha = 0.6, bins = 100) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern and Northern Bering Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))+geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
)
worldmap +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = all_bs, aes(x = lon, y = lat,
z = cpue), alpha = 0.6, bins = 50) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern and Northern Bering Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))+geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
)
worldmap +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = all_bs, aes(x = lon, y = lat,
z = cpue), alpha = 0.6, bins = 30) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern and Northern Bering Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))+geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
)
worldmap +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = all_bs, aes(x = lon, y = lat,
z = cpue), alpha = 0.6, bins = 11) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern and Northern Bering Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))+geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
)
?stat_summary_2d
worldmap +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = all_bs, aes(x = lon, y = lat,
z = cpue), alpha = 0.6, bins = 11, fun=mean) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern and Northern Bering Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))+geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
)
worldmap +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = all_bs, aes(x = lon, y = lat,
z = cpue), alpha = 0.6, bins = 20, fun=mean) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern and Northern Bering Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))+geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
)
worldmap +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = all_bs, aes(x = lon, y = lat,
z = cpue), alpha = 0.6, bins = 30, fun=mean) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern and Northern Bering Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))+geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
)
worldmap +
# Generate grids (x,y) and fill them with CPUE data (z). The `bins` argument controls       how many grids there are, and the size.
stat_summary_2d(data = all_bs, aes(x = lon, y = lat,
z = cpue), alpha = 0.6, bins = 15, fun=mean) +
# Create the legend and grid color scheme
scale_fill_gradient(name = "Weight (tons) CPUE", low = "green", high = "red") +
# Control where the center of the map is with xlim and ylim
xlim(-185, -150) + ylim(50, 70) + xlab("Longitude") + ylab("Latitude") +
# Map title
ggtitle("Eastern and Northern Bering Sea Trawl Survey (1982-1984)") +
# Customize map by removing grid lines, adding a border and background color
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
axis.line = element_line(colour = "black"),
panel.background= element_rect(fill = "skyblue2"))+geom_map(
data = world, map = world,
aes(long, lat, map_id = region)
)
setwd('~/Dropbox/FisheriesManagement2023/')
setwd("~/Dropbox/FisheriesManagement2023/Lab3 - Fisheries Data Visualization part 1")
knitr::opts_chunk$set(echo = TRUE)
lab_path = dirname(rstudioapi::getSourceEditorContext()$path)
knitr::opts_knit$set(root.dir = lab_path)
getwd()
set.seed(9999)
require(FSAdata)
require(FSA)
require(tidyverse)
require(rfishbase)
colnames(RedDrum)
RD = RedDrum
glimpse(RD)
d = RD %>% filter(age > 5)
dim(d) # prints number of rows, columns
colnames(RedDrum)
RD = RedDrum
glimpse(RD)
data = RD %>% filter(age > 5)
dim(data) # prints number of rows, columns
plot(fl~age,data=data)
setwd("~/Dropbox/FisheriesManagement2023/Lab3 - Fisheries Data Visualization part 1/Lab3")
knitr::opts_chunk$set(echo = TRUE)
lab_path = dirname(rstudioapi::getSourceEditorContext()$path)
knitr::opts_knit$set(root.dir = lab_path)
getwd()
set.seed(9999)
require(FSAdata)
require(FSA)
require(tidyverse)
require(rfishbase)
colnames(RedDrum)
RD = RedDrum
glimpse(RD)
data = RD %>% filter(age > 5)
dim(data) # prints number of rows, columns
plot(fl~age,data=data)
ggplot() + geom_point(data=data, aes(x=age, y=fl))
p1 = p + geom_point(data=d, mapping=aes(x=age, y=fl),
colour = "red",
size = 4,
alpha = 0.6,
pch=18)
plot = ggplot() + geom_point(data=data, aes(x=age, y=fl))
p1 = plot + geom_point(data=d, mapping=aes(x=age, y=fl),
colour = "red",
size = 4,
alpha = 0.6,
pch=18)
p1 = plot + geom_point(data=data, mapping=aes(x=age, y=fl),
colour = "red",
size = 4,
alpha = 0.6,
pch=18)
p1
plot = ggplot() + geom_point(data=data, aes(x=age, y=fl))
plot = ggplot() + geom_point(data=data, aes(x=age, y=fl))
plot
p2 = p1 +  labs(x = "Fork Length (cm)",
y = "Age (years)",
title = "Length Age Relationship")
p2
p2 + geom_smooth(aes(d$age, d$fl), lwd = 1, se=T)
p2 = p1 +  labs(x = "Fork Length (cm)",
y = "Age (years)",
title = "Length Age Relationship")
p2
p2 + geom_smooth(aes(d$age, d$fl), lwd = 1, se=T)
p2 = p1 +  labs(x = "Fork Length (cm)",
y = "Age (years)",
title = "Length Age Relationship")
p2
p2 + geom_smooth(aes(d$age, d$fl), lwd = 1, se=T)
p2 + geom_smooth(aes(data$age, data$fl), lwd = 1, se=T)
h = ggplot(d, aes(fl))
h = ggplot(data, aes(fl))
h1 = h + geom_histogram(binwidth = 20)
h1
h <- ggplot(d, aes(age))
h <- ggplot(data, aes(age))
h1 <- h + geom_histogram(binwidth = 3)
h1
b <- ggplot(data, aes(factor(age), fl)) + geom_boxplot()
b
plot = ggplot() + geom_point(data=data, aes(x=age, y=fl))
plot
p2 = plot + geom_point(data=data, mapping=aes(x=age, y=fl),
colour = "red",
size = 4,
alpha = 0.6,
pch=18) +
labs(x = "Fork Length (cm)",
y = "Age (years)",
title = "Length Age Relationship")
p2
p2 = plot + geom_point(data=data, mapping=aes(x=age, y=fl),
colour = "maroon",
size = 4,
alpha = 0.6,
pch=18) +
labs(x = "Fork Length (cm)",
y = "Age (years)",
title = "Length Age Relationship")
p2
p2 = plot + geom_point(data=data, mapping=aes(x=age, y=fl),
colour = "maroon",
size = 3,
alpha = 0.6,
pch=18) +
labs(x = "Fork Length (cm)",
y = "Age (years)",
title = "Length Age Relationship")
p2
colnames(RedDrum)
data = RedDrum
glimpse(RD)
dim(data) # prints number of rows, columns
colnames(RedDrum)
data = RedDrum
glimpse(RD)
dim(data) # prints number of rows, columns
plot(fl~age,data=data)
plot = ggplot() + geom_point(data=data, aes(x=age, y=fl))
plot
p2 = plot + geom_point(data=data, mapping=aes(x=age, y=fl),
colour = "maroon",
size = 3,
alpha = 0.6,
pch=18) +
labs(x = "Fork Length (cm)",
y = "Age (years)",
title = "Length Age Relationship")
p2
plot = ggplot() + geom_point(data=data, mapping=aes(x=age, y=fl),
colour = "maroon",
size = 3,
alpha = 0.6,
pch=18) +
labs(x = "Fork Length (cm)",
y = "Age (years)",
title = "Length Age Relationship")
plot
plot = ggplot() + geom_point(data=data, mapping=aes(x=age, y=fl),
colour = "black",
size = 3,
alpha = 0.6,
pch=18) +
labs(x = "Fork Length (cm)",
y = "Age (years)",
title = "Length Age Relationship")
plot
plot = ggplot() + geom_point(data=data, mapping=aes(x=age, y=fl),
colour = "black",
size = 3,
alpha = 0.6,
pch=21) +
labs(x = "Fork Length (cm)",
y = "Age (years)",
title = "Length Age Relationship")
plot
h = ggplot(data, aes(fl))
h1 = h + geom_histogram(binwidth = 20)
h1
h1 = ggplot(data, aes(fl)) + geom_histogram(binwidth = 20)
h1
RDhist = ggplot(data, aes(fl)) + geom_histogram(binwidth = 20)
RDhist
View(data)
h <- ggplot(data, aes(age))
h1 <- h + geom_histogram(binwidth = 3)
h1
RDhist2 <- ggplot(data, aes(age)) + geom_histogram(binwidth = 3)
RDhist2
RDbox <- ggplot(data, aes(factor(age), fl)) + geom_boxplot()
RDbox
RDhist = ggplot(data, aes(fl)) + geom_histogram(binwidth = 20, border="green")
RDhist = ggplot(data, aes(fl)) + geom_histogram(binwidth = 20, borders="green")
RDhist
RDhist = ggplot(data, aes(fl)) + geom_histogram(binwidth = 20, colour="green")
RDhist = ggplot(data, aes(fl)) + geom_histogram(binwidth = 20, colour="green")
RDhist
colors <- c(rep("red",7), rep("blue",4), rep("orange",3))
RDhist = ggplot(data, aes(fl)) + geom_histogram(binwidth = 20, colour="black", fill=colors)
RDhist
min(data$fl)
max(data$fl)
1189-53
1136-800
colors <- c(rep("red",200), rep("blue",600), rep("orange",336))
RDhist = ggplot(data, aes(fl)) + geom_histogram(binwidth = 20, colour="black", fill=colors)
RDhist
colors <- c(rep("red",200), rep("blue",600), rep("orange",336))
RDhist = ggplot(data, aes(fl)) + geom_histogram(binwidth = 20, colour="black", fill=colors)
RDhist
RDhist = ggplot(data, aes(fl)) + geom_histogram(binwidth = 20, colour="black", fill="grey")
RDhist
size = nrow(data)
size
size = nrow(data)
colors <- c(rep("red",size*(1/3)), rep("blue",size*(2/3)), rep("orange",size))
RDhist = ggplot(data, aes(fl)) + geom_histogram(binwidth = 20, colour="black", fill=colors)
RDhist
size*(1/3)
size*(2/3)
size
size = nrow(data)
colors <- c(rep("red",size*(1/3)), rep("blue",size*(2/3)), rep("orange",size*(1/3)))
RDhist = ggplot(data, aes(fl)) + geom_histogram(binwidth = 20, colour="black", fill=colors)
RDhist
size = nrow(data)
colors <- c(rep("red",size*(1/3)), rep("blue",size*(2/3)), rep("orange",size*(1/3)))
RDhist = ggplot(data, aes(fl)) + geom_histogram(binwidth = 20, colour="black", fill=colors)
RDhist
RDhist = ggplot(data, aes(fl)) + geom_histogram(binwidth = 20, colour="black", fill="grey")
RDhist = ggplot(data, aes(fl)) + geom_histogram(binwidth = 20, colour="black", fill="grey")
RDhist
RDhist2 <- ggplot(data, aes(age)) + geom_histogram(binwidth = 20, colour="black", fill="grey")
RDhist2
RDhist2 <- ggplot(data, aes(age)) + geom_histogram(binwidth = 3, colour="black", fill="grey")
RDhist2
min(data$age)
